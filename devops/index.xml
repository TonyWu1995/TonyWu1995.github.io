<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Devops on Tony Wu&#39;s Blog</title>
    <link>tonywu1995.github.io/devops/</link>
    <description>Recent content in Devops on Tony Wu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Sun, 03 Oct 2021 16:25:57 +0800</lastBuildDate><atom:link href="tonywu1995.github.io/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Node_Exporter</title>
      <link>tonywu1995.github.io/devops/node_exporter/</link>
      <pubDate>Sun, 03 Oct 2021 16:25:57 +0800</pubDate>
      
      <guid>tonywu1995.github.io/devops/node_exporter/</guid>
      <description>前言  node exporter是用來監控Linux vm的一個Prometheus Client  提供: CPU 使用率、硬碟使用率&amp;hellip; metrics    步驟 安裝Node Exporter在Ubuntu20.04 #!/bin/bashversion=&amp;quot;${VERSION:-1.2.2}&amp;quot;arch=&amp;quot;${ARCH:-linux-amd64}&amp;quot;bin_dir=&amp;quot;${BIN_DIR:-/usr/local/bin}&amp;quot;wget &amp;quot;https://github.com/prometheus/node_exporter/releases/download/v$version/node_exporter-$version.$arch.tar.gz&amp;quot; \-O /tmp/node_exporter.tar.gzmkdir -p /tmp/node_exportercd /tmp || { echo &amp;quot;ERROR! No /tmp found..&amp;quot;; exit 1; }tar xfz /tmp/node_exporter.tar.gz -C /tmp/node_exporter || { echo &amp;quot;ERROR! Extracting the node_exporter tar&amp;quot;; exit 1; }sudo cp &amp;quot;/tmp/node_exporter/node_exporter-$version.$arch/node_exporter&amp;quot; &amp;quot;$bin_dir&amp;quot;chown root:staff &amp;quot;$bin_dir/node_exporter&amp;quot;sudo cat &amp;lt;&amp;lt;EOF &amp;gt; /etc/systemd/system/node_exporter.service[Unit]Description=Node ExporterAfter=network.</description>
    </item>
    
    <item>
      <title>Ngork</title>
      <link>tonywu1995.github.io/devops/ngork/</link>
      <pubDate>Tue, 21 Sep 2021 17:06:57 +0800</pubDate>
      
      <guid>tonywu1995.github.io/devops/ngork/</guid>
      <description>介紹  在本機上開發的時候常常遇到需要https和domain name的狀況，例如:Line Bot的webhook測試，這時候使用ngrok就可以解決這個問題，ngork賦予你一個暫時domain name和https  安裝 Windows choco install ngrokMac brew install ngrok在本機上登入ngork(使用token認證) ngrok authtoken &amp;lt;token&amp;gt;使用 ngrok http &amp;lt;Port&amp;gt;參考連結  ngork  </description>
    </item>
    
    <item>
      <title>Mongo備份與還原</title>
      <link>tonywu1995.github.io/devops/mongo_backup_restore/</link>
      <pubDate>Tue, 21 Sep 2021 16:45:55 +0800</pubDate>
      
      <guid>tonywu1995.github.io/devops/mongo_backup_restore/</guid>
      <description>介紹  在工作上不免要定期備份database的資料與還原datdabase的資料  備份步驟  連線進入mongo  mongo -u &amp;lt;username&amp;gt; -p &amp;lt;password&amp;gt;切換db  use admin磁碟同步與上鎖  db.runCommand({fsync:1,lock:1})確認是否上鎖  db.currentOp()備份資料  mongodump --host &amp;lt;host-ip&amp;gt; --port 27017 --db &amp;lt;database&amp;gt; --authenticationDatabase admin --username &amp;lt;username&amp;gt; --password &amp;lt;password&amp;gt; --out &amp;lt;Path&amp;gt;解鎖  db.fsyncUnlock()還原步驟  還原  mongorestore --host &amp;lt;host-ip&amp;gt; --port 27017 --username &amp;lt;username&amp;gt; --password &amp;lt;password&amp;gt; --db &amp;lt;database&amp;gt; &amp;lt;backup file path&amp;gt;參考連結  Mongo  </description>
    </item>
    
    <item>
      <title>Sdkman</title>
      <link>tonywu1995.github.io/devops/skdman/</link>
      <pubDate>Tue, 21 Sep 2021 15:46:52 +0800</pubDate>
      
      <guid>tonywu1995.github.io/devops/skdman/</guid>
      <description>介紹  SDKMAN是一款基於Linux/Mac的SDK管理工具，可以管理多個版本JDK，也可以安裝與JDK相容的套件  安裝SDKMAN $ curl -s &amp;quot;https://get.sdkman.io&amp;quot; | bash$ source &amp;quot;$HOME/.sdkman/bin/sdkman-init.sh&amp;quot;sdk version&amp;gt; sdkman 5.0.0+51 羅列Java版本 sdk list java安裝JAVA sdk install java x.y.z-open移除 sdk uninstall java ...指定預設JAVA sdk default java 11 參考連結  SDKMAN  </description>
    </item>
    
  </channel>
</rss>
