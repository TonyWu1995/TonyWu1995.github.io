<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Devops on Tony Wu&#39;s Blog</title>
    <link>https://tonywu1995.github.io/devops/</link>
    <description>Recent content in Devops on Tony Wu&#39;s Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Fri, 27 May 2022 22:59:35 +0800</lastBuildDate><atom:link href="https://tonywu1995.github.io/devops/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>SSH_Tunnel</title>
      <link>https://tonywu1995.github.io/devops/ssh_tunnel/</link>
      <pubDate>Fri, 27 May 2022 22:59:35 +0800</pubDate>
      
      <guid>https://tonywu1995.github.io/devops/ssh_tunnel/</guid>
      <description>前言 使用到 SSH Tunnel 情境
這裡有一台Server，上面架設一個Postgres，因為公司資安的關係，並不對外開啟port:5432 我們目前在Local開發一個服務，需要連線到Server上的Postgres，不太可能每次改完程式，部署上去測試，這樣來回時間會拉很長
主要內容 ssh -L [local_ip]:[local_port]:[host_ip]:[host_port] username@host local_ip :本地ip位置，預設綁定本機 local_port:本地開啟port host_ip:遠端Server ip host_port:遠端要轉發port L: 建立Tunnel Example ssh -L 5432:localhost:5432 tony@123.456.789.10 參考連結 SSH Tunnel 突破防火牆限制 </description>
    </item>
    
    <item>
      <title>Ngork</title>
      <link>https://tonywu1995.github.io/devops/ngork/</link>
      <pubDate>Tue, 21 Sep 2021 17:06:57 +0800</pubDate>
      
      <guid>https://tonywu1995.github.io/devops/ngork/</guid>
      <description>介紹 在本機上開發的時候常常遇到需要https和domain name的狀況，例如:Line Bot的webhook測試，這時候使用ngrok就可以解決這個問題，ngork賦予你一個暫時domain name和https 安裝 Windows choco install ngrok Mac brew install ngrok 在本機上登入ngork(使用token認證) ngrok authtoken &amp;lt;token&amp;gt; 使用 ngrok http &amp;lt;Port&amp;gt; 參考連結 ngork </description>
    </item>
    
    <item>
      <title>Sdkman</title>
      <link>https://tonywu1995.github.io/devops/skdman/</link>
      <pubDate>Tue, 21 Sep 2021 15:46:52 +0800</pubDate>
      
      <guid>https://tonywu1995.github.io/devops/skdman/</guid>
      <description>介紹 SDKMAN是一款基於Linux/Mac的SDK管理工具，可以管理多個版本JDK，也可以安裝與JDK相容的套件 安裝SDKMAN $ curl -s &amp;#34;https://get.sdkman.io&amp;#34; | bash$ source &amp;#34;$HOME/.sdkman/bin/sdkman-init.sh&amp;#34;sdk version&amp;gt; sdkman 5.0.0+51 羅列Java版本 sdk list java 安裝JAVA sdk install java x.y.z-open 移除 sdk uninstall java ... 指定預設JAVA sdk default java 11 參考連結 SDKMAN </description>
    </item>
    
  </channel>
</rss>
